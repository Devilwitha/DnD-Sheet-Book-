name: Build Android APK

on:
  push:
    branches: [ "main", "beta", "alpha" ]
  pull_request:
    branches: [ "main", "beta", "alpha" ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip autoconf automake libtool build-essential pkg-config \
            zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev libltdl-dev autopoint \
            libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            libpango1.0-dev libjpeg-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          python -m pip install -r requirements_android.txt
          python -m pip install buildozer


      - name: Build with Buildozer
        run: |
          buildozer -v android debug
          ls -l bin

      - name: Get APK Name
        id: get_apk_name
        run: |
          APK_NAME=$(ls bin/*.apk)
          if [ -z "$APK_NAME" ]; then
            echo "Fehler: Keine APK-Datei im bin-Verzeichnis gefunden."
            exit 1
          fi
          echo "APK_NAME=$APK_NAME" >> $GITHUB_ENV

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: dndapp-debug
          path: ${{ env.APK_NAME }}
